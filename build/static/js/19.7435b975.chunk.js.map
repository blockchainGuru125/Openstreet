{"version":3,"sources":["components/@vuexy/spinner/Loading-spinner.js","Router.js","components/@vuexy/rippleButton/RippleButton.js","App.js"],"names":["ComponentSpinner","className","React","Component","portfolios","lazy","Dashboard","articleview","userEdit","userView","Login","register","AppRoute","connect","state","token","auth","component","fullLayout","rest","render","props","Consumer","context","LayoutTag","activeLayout","horizontalLayout","VerticalLayout","permission","user","fallback","AppRouter","history","exact","path","Button","Ripple","rippleColor","during","block","color","App","Router"],"mappings":"8OAgBeA,G,8KAZX,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,2B,GAPMC,IAAMC,Y,SCM/BC,EAAaC,gBAAK,kBAAM,6EACxBC,EAAYD,gBAAK,kBAAM,sEACvBE,EAAcF,gBAAK,kBAAM,sEACzBG,EAAWH,gBAAK,kBAAM,yDACtBI,EAAWJ,gBAAK,kBAAM,kCACtBK,EAAQL,gBAAK,kBAAM,wDACnBM,EAAWN,gBAAK,kBACpB,kCAoCIO,EAAWC,aANO,SAAAC,GACtB,MAAO,CACLC,MAAOD,EAAME,KAAKD,SAILF,EAhCG,SAAC,GAAD,IAAcV,EAAd,EAAGc,UAAsBC,EAAzB,EAAyBA,WAAeC,EAAxC,iDAClB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GACN,OACE,kBAAC,IAAcC,SAAf,MACG,SAAAC,GACC,IAAIC,GACa,IAAfN,EACIK,EAAQL,WACuB,eAA/BK,EAAQT,MAAMW,aACdF,EAAQG,iBACRH,EAAQI,eACd,OACE,kBAACH,EAAD,iBAAeH,EAAf,CAAsBO,WAAYP,EAAMQ,OACtC,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC3B,EAAckB,eAuClBU,E,uKAnBX,OAEE,kBAAC,IAAD,CAAQC,QAASA,KACf,kBAAC,IAAD,KAEE,kBAACpB,EAAD,CAAUqB,OAAK,EAACC,KAAK,IAAIjB,UAAWP,EAAOQ,YAAU,IACrD,kBAACN,EAAD,CAAUsB,KAAK,aAAajB,UAAWX,IACvC,kBAACM,EAAD,CAAUsB,KAAK,2BAA2BjB,UAAWV,IACrD,kBAACK,EAAD,CAAUsB,KAAK,cAAcjB,UAAWb,IACxC,kBAACQ,EAAD,CAAUsB,KAAK,YAAYjB,UAAWN,EAAUO,YAAU,IAC1D,kBAACN,EAAD,CAAUsB,KAAK,aAAajB,UAAWT,IACvC,kBAACI,EAAD,CAAUsB,KAAK,aAAajB,UAAWR,U,GAbzBP,IAAMC,W,kBChC9BgC,IAAOC,OAhBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,MAAUpB,EAAlC,uDACnB,kBAAC,IAAD,CACEqB,MAAOH,GAA4B,0BACnCC,OAAQA,EACRrC,UAAS,UAAKsC,EAAQ,UAAY,KAElC,kBAACJ,EAAA,EAAWhB,K,qBCGDsB,UANH,SAAApB,GACV,OACI,kBAACqB,EAAD","file":"static/js/19.7435b975.chunk.js","sourcesContent":["import React from \"react\"\nimport \"../../../assets/scss/components/app-loader.scss\"\nclass ComponentSpinner extends React.Component {\n  render() {\n    return (\n      <div className=\"fallback-spinner\">\n        <div className=\"loading component-loader\">\n          <div className=\"effect-1 effects\"></div>\n          <div className=\"effect-2 effects\"></div>\n          <div className=\"effect-3 effects\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ComponentSpinner\n","import React, { Suspense, lazy } from \"react\"\nimport { Router, Switch, Route } from \"react-router-dom\"\nimport { history } from \"./history\"\nimport { connect } from \"react-redux\"\nimport Spinner from \"./components/@vuexy/spinner/Loading-spinner\"\nimport { ContextLayout } from \"./utility/context/Layout\"\n\n// Route-based code splitting\nconst portfolios = lazy(() => import(\"./views/ui-elements/data-list/ListView\"))\nconst Dashboard = lazy(() => import(\"./views/tables/aggrid/Aggrid1\"))\nconst articleview = lazy(() => import(\"./views/charts/apex/ApexCharts\"))\nconst userEdit = lazy(() => import(\"./views/apps/user/edit/Edit\"))\nconst userView = lazy(() => import(\"./views/apps/user/view/View\"))\nconst Login = lazy(() => import(\"./views/pages/authentication/login/Login\"))\nconst register = lazy(() =>\n  import(\"./views/pages/authentication/register/Register\")\n)\n\n// Set Layout and Component Using App Route\nconst RouteConfig = ({ component: Component, fullLayout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <ContextLayout.Consumer>\n          {context => {\n            let LayoutTag =\n              fullLayout === true\n                ? context.fullLayout\n                : context.state.activeLayout === \"horizontal\"\n                ? context.horizontalLayout\n                : context.VerticalLayout\n            return (\n              <LayoutTag {...props} permission={props.user}>\n                <Suspense fallback={<Spinner />}>\n                  <Component {...props} />\n                </Suspense>\n              </LayoutTag>\n            )\n          }}\n        </ContextLayout.Consumer>\n      )\n    }}\n  />\n)\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  }\n}\n\nconst AppRoute = connect(mapStateToProps)(RouteConfig)\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      // Set the directory path if you are deploying in sub-folder\n      <Router history={history}>\n        <Switch>\n\n          <AppRoute exact path=\"/\" component={Login} fullLayout/>\n          <AppRoute path=\"/dashboard\" component={Dashboard} />\n          <AppRoute path=\"/articleview/:articleID/\" component={articleview} />\n          <AppRoute path=\"/portfolios\" component={portfolios} />\n          <AppRoute path=\"/register\" component={register} fullLayout />\n          <AppRoute path=\"/user/edit\" component={userEdit} />\n          <AppRoute path=\"/user/view\" component={userView} />\n\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default AppRouter\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"reactstrap\"\nimport Ripples from \"react-ripples\"\n\nconst RippleButton = ({ rippleColor, during, block, ...rest }) => (\n  <Ripples\n    color={rippleColor ? rippleColor : \"rgba(255, 255, 255, .5)\"}\n    during={during}\n    className={`${block ? \"d-block\" : \"\"}`}\n  >\n    <Button {...rest} />\n  </Ripples>\n)\n\nRippleButton.propTypes = {\n  ...Button.propTypes,\n  rippleColor: PropTypes.string,\n  during: PropTypes.number\n}\n\nButton.Ripple = RippleButton\n","import React from \"react\"\nimport Router from \"./Router\"\nimport \"./components/@vuexy/rippleButton/RippleButton\"\n\n\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\nimport \"prismjs/themes/prism-tomorrow.css\"\nimport 'antd/dist/antd.css';\nconst App = props => {\n  return (\n      <Router />\n    );\n}\n\nexport default App\n"],"sourceRoot":""}