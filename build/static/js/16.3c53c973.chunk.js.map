{"version":3,"sources":["views/tables/aggrid/Aggrid1.js"],"names":["isoCountries","AggridTable","state","rowData","paginationPageSize","name","docs","allocation","basicPicker","currenPageSize","getPageSize","isLoading","isPostLoading","searchText","company_health","company_yield","fair_value_score","company_quality","risk_score","industry_rank","net_value_executed_pct","net_holding_pct","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRenderer","params","keyData","value","filter","filterParams","filterOptions","suppressAndOrCondition","fetchArticles","axios","get","then","res","items","concat","data","setState","today","Date","setDate","getDate","toISOString","slice","sorted","console","log","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","model","getFilterModel","handleChange","e","target","handleSubmit","event","post","localStorage","getItem","portfolio_name","date_created","split","min_health","parseInt","min_yield","min_fair_value","min_quality","min_risk","max_industry_rank","min_insider_rating","min_inst_rating","props","history","push","this","token","newProps","to","length","Fragment","grid","gutter","xs","sm","md","lg","xl","xxl","size","pagination","onChange","page","pageSize","dataSource","renderItem","item","style","marginLeft","marginRight","className","src","imageUrl","alt","href","url","title","paddingTop","color","pubDate","toString","substring","authors","countryCode","country","toUpperCase","hasOwnProperty","source","content","marginTop","id","paddingBottom","onSubmit","row","type","placeholder","date","options","maxDate","fp_incr","offset","Ripple","outline","paddingLeft","tag","right","onClick","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","onFilterChanged","pivotPanelShow","enableRtl","direction","React","Component","connect","auth"],"mappings":"8iBAmCMA,GADW,IACI,CACnB,GAAO,cACP,GAAO,gBACP,GAAO,UACP,GAAO,UACP,GAAO,iBACP,GAAO,UACP,GAAO,SACP,GAAO,WACP,GAAO,aACP,GAAO,sBACP,GAAO,YACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,UACP,GAAO,aACP,GAAO,WACP,GAAO,UACP,GAAO,UACP,GAAO,SACP,GAAO,QACP,GAAO,UACP,GAAO,SACP,GAAO,UACP,GAAO,yBACP,GAAO,WACP,GAAO,gBACP,GAAO,SACP,GAAO,iCACP,GAAO,oBACP,GAAO,WACP,GAAO,eACP,GAAO,UACP,GAAO,WACP,GAAO,WACP,GAAO,SACP,GAAO,aACP,GAAO,iBACP,GAAO,2BACP,GAAO,OACP,GAAO,QACP,GAAO,QACP,GAAO,mBACP,GAAO,0BACP,GAAO,WACP,GAAO,UACP,GAAO,QACP,GAAO,6BACP,GAAO,eACP,GAAO,aACP,GAAO,gBACP,GAAO,UACP,GAAO,OACP,GAAO,SACP,GAAO,iBACP,GAAO,UACP,GAAO,WACP,GAAO,WACP,GAAO,qBACP,GAAO,UACP,GAAO,QACP,GAAO,cACP,GAAO,oBACP,GAAO,UACP,GAAO,UACP,GAAO,WACP,GAAO,8BACP,GAAO,gBACP,GAAO,OACP,GAAO,UACP,GAAO,SACP,GAAO,gBACP,GAAO,mBACP,GAAO,8BACP,GAAO,QACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,SACP,GAAO,YACP,GAAO,UACP,GAAO,aACP,GAAO,OACP,GAAO,YACP,GAAO,WACP,GAAO,SACP,GAAO,gBACP,GAAO,SACP,GAAO,QACP,GAAO,kCACP,GAAO,gCACP,GAAO,WACP,GAAO,YACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,4BACP,GAAO,OACP,GAAO,UACP,GAAO,cACP,GAAO,SACP,GAAO,QACP,GAAO,UACP,GAAO,QACP,GAAO,SACP,GAAO,SACP,GAAO,aACP,GAAO,QACP,GAAO,WACP,GAAO,QACP,GAAO,SACP,GAAO,aACP,GAAO,mCACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,UACP,GAAO,yBACP,GAAO,gBACP,GAAO,YACP,GAAO,aACP,GAAO,QACP,GAAO,YACP,GAAO,aACP,GAAO,SACP,GAAO,WACP,GAAO,WACP,GAAO,OACP,GAAO,QACP,GAAO,mBACP,GAAO,aACP,GAAO,aACP,GAAO,YACP,GAAO,UACP,GAAO,SACP,GAAO,kCACP,GAAO,UACP,GAAO,SACP,GAAO,WACP,GAAO,aACP,GAAO,aACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,QACP,GAAO,cACP,GAAO,uBACP,GAAO,gBACP,GAAO,cACP,GAAO,YACP,GAAO,QACP,GAAO,UACP,GAAO,OACP,GAAO,iBACP,GAAO,2BACP,GAAO,SACP,GAAO,OACP,GAAO,WACP,GAAO,QACP,GAAO,kCACP,GAAO,SACP,GAAO,mBACP,GAAO,WACP,GAAO,OACP,GAAO,cACP,GAAO,WACP,GAAO,SACP,GAAO,WACP,GAAO,cACP,GAAO,QACP,GAAO,UACP,GAAO,UACP,GAAO,qBACP,GAAO,SACP,GAAO,mBACP,GAAO,eACP,GAAO,wBACP,GAAO,cACP,GAAO,eACP,GAAO,4BACP,GAAO,+BACP,GAAO,QACP,GAAO,aACP,GAAO,wBACP,GAAO,eACP,GAAO,UACP,GAAO,SACP,GAAO,aACP,GAAO,eACP,GAAO,YACP,GAAO,WACP,GAAO,WACP,GAAO,kBACP,GAAO,UACP,GAAO,eACP,GAAO,kCACP,GAAO,QACP,GAAO,YACP,GAAO,QACP,GAAO,WACP,GAAO,yBACP,GAAO,YACP,GAAO,SACP,GAAO,cACP,GAAO,uBACP,GAAO,SACP,GAAO,aACP,GAAO,WACP,GAAO,WACP,GAAO,cACP,GAAO,OACP,GAAO,UACP,GAAO,QACP,GAAO,sBACP,GAAO,UACP,GAAO,SACP,GAAO,eACP,GAAO,2BACP,GAAO,SACP,GAAO,SACP,GAAO,UACP,GAAO,uBACP,GAAO,iBACP,GAAO,gBACP,GAAO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","file":"static/js/16.3c53c973.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Col,\n  FormGroup,\n  Form,\n  Spinner,\n  Container,\n  Row\n} from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown } from \"react-feather\";\nimport axios from \"axios\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/light.css\";\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { List,Divider } from 'antd';\nimport * as Icon from 'react-feather';\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nconst isoCountries = {\n  'AF' : 'Afghanistan',\n  'AX' : 'Aland Islands',\n  'AL' : 'Albania',\n  'DZ' : 'Algeria',\n  'AS' : 'American Samoa',\n  'AD' : 'Andorra',\n  'AO' : 'Angola',\n  'AI' : 'Anguilla',\n  'AQ' : 'Antarctica',\n  'AG' : 'Antigua And Barbuda',\n  'AR' : 'Argentina',\n  'AM' : 'Armenia',\n  'AW' : 'Aruba',\n  'AU' : 'Australia',\n  'AT' : 'Austria',\n  'AZ' : 'Azerbaijan',\n  'BS' : 'Bahamas',\n  'BH' : 'Bahrain',\n  'BD' : 'Bangladesh',\n  'BB' : 'Barbados',\n  'BY' : 'Belarus',\n  'BE' : 'Belgium',\n  'BZ' : 'Belize',\n  'BJ' : 'Benin',\n  'BM' : 'Bermuda',\n  'BT' : 'Bhutan',\n  'BO' : 'Bolivia',\n  'BA' : 'Bosnia And Herzegovina',\n  'BW' : 'Botswana',\n  'BV' : 'Bouvet Island',\n  'BR' : 'Brazil',\n  'IO' : 'British Indian Ocean Territory',\n  'BN' : 'Brunei Darussalam',\n  'BG' : 'Bulgaria',\n  'BF' : 'Burkina Faso',\n  'BI' : 'Burundi',\n  'KH' : 'Cambodia',\n  'CM' : 'Cameroon',\n  'CA' : 'Canada',\n  'CV' : 'Cape Verde',\n  'KY' : 'Cayman Islands',\n  'CF' : 'Central African Republic',\n  'TD' : 'Chad',\n  'CL' : 'Chile',\n  'CN' : 'China',\n  'CX' : 'Christmas Island',\n  'CC' : 'Cocos (Keeling) Islands',\n  'CO' : 'Colombia',\n  'KM' : 'Comoros',\n  'CG' : 'Congo',\n  'CD' : 'Congo, Democratic Republic',\n  'CK' : 'Cook Islands',\n  'CR' : 'Costa Rica',\n  'CI' : 'Cote D\\'Ivoire',\n  'HR' : 'Croatia',\n  'CU' : 'Cuba',\n  'CY' : 'Cyprus',\n  'CZ' : 'Czech Republic',\n  'DK' : 'Denmark',\n  'DJ' : 'Djibouti',\n  'DM' : 'Dominica',\n  'DO' : 'Dominican Republic',\n  'EC' : 'Ecuador',\n  'EG' : 'Egypt',\n  'SV' : 'El Salvador',\n  'GQ' : 'Equatorial Guinea',\n  'ER' : 'Eritrea',\n  'EE' : 'Estonia',\n  'ET' : 'Ethiopia',\n  'FK' : 'Falkland Islands (Malvinas)',\n  'FO' : 'Faroe Islands',\n  'FJ' : 'Fiji',\n  'FI' : 'Finland',\n  'FR' : 'France',\n  'GF' : 'French Guiana',\n  'PF' : 'French Polynesia',\n  'TF' : 'French Southern Territories',\n  'GA' : 'Gabon',\n  'GM' : 'Gambia',\n  'GE' : 'Georgia',\n  'DE' : 'Germany',\n  'GH' : 'Ghana',\n  'GI' : 'Gibraltar',\n  'GR' : 'Greece',\n  'GL' : 'Greenland',\n  'GD' : 'Grenada',\n  'GP' : 'Guadeloupe',\n  'GU' : 'Guam',\n  'GT' : 'Guatemala',\n  'GG' : 'Guernsey',\n  'GN' : 'Guinea',\n  'GW' : 'Guinea-Bissau',\n  'GY' : 'Guyana',\n  'HT' : 'Haiti',\n  'HM' : 'Heard Island & Mcdonald Islands',\n  'VA' : 'Holy See (Vatican City State)',\n  'HN' : 'Honduras',\n  'HK' : 'Hong Kong',\n  'HU' : 'Hungary',\n  'IS' : 'Iceland',\n  'IN' : 'India',\n  'ID' : 'Indonesia',\n  'IR' : 'Iran, Islamic Republic Of',\n  'IQ' : 'Iraq',\n  'IE' : 'Ireland',\n  'IM' : 'Isle Of Man',\n  'IL' : 'Israel',\n  'IT' : 'Italy',\n  'JM' : 'Jamaica',\n  'JP' : 'Japan',\n  'JE' : 'Jersey',\n  'JO' : 'Jordan',\n  'KZ' : 'Kazakhstan',\n  'KE' : 'Kenya',\n  'KI' : 'Kiribati',\n  'KR' : 'Korea',\n  'KW' : 'Kuwait',\n  'KG' : 'Kyrgyzstan',\n  'LA' : 'Lao People\\'s Democratic Republic',\n  'LV' : 'Latvia',\n  'LB' : 'Lebanon',\n  'LS' : 'Lesotho',\n  'LR' : 'Liberia',\n  'LY' : 'Libyan Arab Jamahiriya',\n  'LI' : 'Liechtenstein',\n  'LT' : 'Lithuania',\n  'LU' : 'Luxembourg',\n  'MO' : 'Macao',\n  'MK' : 'Macedonia',\n  'MG' : 'Madagascar',\n  'MW' : 'Malawi',\n  'MY' : 'Malaysia',\n  'MV' : 'Maldives',\n  'ML' : 'Mali',\n  'MT' : 'Malta',\n  'MH' : 'Marshall Islands',\n  'MQ' : 'Martinique',\n  'MR' : 'Mauritania',\n  'MU' : 'Mauritius',\n  'YT' : 'Mayotte',\n  'MX' : 'Mexico',\n  'FM' : 'Micronesia, Federated States Of',\n  'MD' : 'Moldova',\n  'MC' : 'Monaco',\n  'MN' : 'Mongolia',\n  'ME' : 'Montenegro',\n  'MS' : 'Montserrat',\n  'MA' : 'Morocco',\n  'MZ' : 'Mozambique',\n  'MM' : 'Myanmar',\n  'NA' : 'Namibia',\n  'NR' : 'Nauru',\n  'NP' : 'Nepal',\n  'NL' : 'Netherlands',\n  'AN' : 'Netherlands Antilles',\n  'NC' : 'New Caledonia',\n  'NZ' : 'New Zealand',\n  'NI' : 'Nicaragua',\n  'NE' : 'Niger',\n  'NG' : 'Nigeria',\n  'NU' : 'Niue',\n  'NF' : 'Norfolk Island',\n  'MP' : 'Northern Mariana Islands',\n  'NO' : 'Norway',\n  'OM' : 'Oman',\n  'PK' : 'Pakistan',\n  'PW' : 'Palau',\n  'PS' : 'Palestinian Territory, Occupied',\n  'PA' : 'Panama',\n  'PG' : 'Papua New Guinea',\n  'PY' : 'Paraguay',\n  'PE' : 'Peru',\n  'PH' : 'Philippines',\n  'PN' : 'Pitcairn',\n  'PL' : 'Poland',\n  'PT' : 'Portugal',\n  'PR' : 'Puerto Rico',\n  'QA' : 'Qatar',\n  'RE' : 'Reunion',\n  'RO' : 'Romania',\n  'RU' : 'Russian Federation',\n  'RW' : 'Rwanda',\n  'BL' : 'Saint Barthelemy',\n  'SH' : 'Saint Helena',\n  'KN' : 'Saint Kitts And Nevis',\n  'LC' : 'Saint Lucia',\n  'MF' : 'Saint Martin',\n  'PM' : 'Saint Pierre And Miquelon',\n  'VC' : 'Saint Vincent And Grenadines',\n  'WS' : 'Samoa',\n  'SM' : 'San Marino',\n  'ST' : 'Sao Tome And Principe',\n  'SA' : 'Saudi Arabia',\n  'SN' : 'Senegal',\n  'RS' : 'Serbia',\n  'SC' : 'Seychelles',\n  'SL' : 'Sierra Leone',\n  'SG' : 'Singapore',\n  'SK' : 'Slovakia',\n  'SI' : 'Slovenia',\n  'SB' : 'Solomon Islands',\n  'SO' : 'Somalia',\n  'ZA' : 'South Africa',\n  'GS' : 'South Georgia And Sandwich Isl.',\n  'ES' : 'Spain',\n  'LK' : 'Sri Lanka',\n  'SD' : 'Sudan',\n  'SR' : 'Suriname',\n  'SJ' : 'Svalbard And Jan Mayen',\n  'SZ' : 'Swaziland',\n  'SE' : 'Sweden',\n  'CH' : 'Switzerland',\n  'SY' : 'Syrian Arab Republic',\n  'TW' : 'Taiwan',\n  'TJ' : 'Tajikistan',\n  'TZ' : 'Tanzania',\n  'TH' : 'Thailand',\n  'TL' : 'Timor-Leste',\n  'TG' : 'Togo',\n  'TK' : 'Tokelau',\n  'TO' : 'Tonga',\n  'TT' : 'Trinidad And Tobago',\n  'TN' : 'Tunisia',\n  'TR' : 'Turkey',\n  'TM' : 'Turkmenistan',\n  'TC' : 'Turks And Caicos Islands',\n  'TV' : 'Tuvalu',\n  'UG' : 'Uganda',\n  'UA' : 'Ukraine',\n  'AE' : 'United Arab Emirates',\n  'GB' : 'United Kingdom',\n  'US' : 'United States',\n  'UM' : 'United States Outlying Islands',\n  'UY' : 'Uruguay',\n  'UZ' : 'Uzbekistan',\n  'VU' : 'Vanuatu',\n  'VE' : 'Venezuela',\n  'VN' : 'Viet Nam',\n  'VG' : 'Virgin Islands, British',\n  'VI' : 'Virgin Islands, U.S.',\n  'WF' : 'Wallis And Futuna',\n  'EH' : 'Western Sahara',\n  'YE' : 'Yemen',\n  'ZM' : 'Zambia',\n  'ZW' : 'Zimbabwe'\n};\n\nconst getCountryName = (countryCode) => {\n  if (isoCountries.hasOwnProperty(countryCode)) {\n      return isoCountries[countryCode];\n  } else {\n      return countryCode;\n  }\n}\nclass AggridTable extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    name: \"\",\n    docs: [],\n    allocation: \"\",\n    basicPicker: \"\",\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    isLoading: true,\n    isPostLoading: true,\n    searchText: '',\n    company_health: \"0\",\n    company_yield: \"0\",\n    fair_value_score: \"0\",\n    company_quality: \"0\",\n    risk_score: \"0\",\n    industry_rank: \"100\",\n    net_value_executed_pct: \"0\",\n    net_holding_pct: \"0\",\n    defaultColDef: {\n      sortable: true,\n      editable: false,\n      resizable: true,\n      suppressMenu: true\n    },\n    columnDefs: [\n      {\n        headerName: \"Ticker\",\n        field: \"ticker\",\n        width: 100,\n        cellRenderer: function (params) {\n          let keyData = params.value;\n          let newLink = `<a href=\"/articleview/${keyData}\">${keyData}</a>`;\n          return newLink;\n        },\n        filter: false,\n      },\n      {\n        headerName: \"Name\",\n        field: \"ticker_name\",\n        filter: true,\n        filterParams: {\n          filterOptions: [\n            'contains'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200,\n        // pinned: window.innerWidth > 992 ? \"left\" : false\n      },\n      {\n        headerName: \"Health Rating\",\n        field: \"company_health\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200\n      },\n      {\n        headerName: \"Yield Rating\",\n        field: \"company_yield\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 140\n      },\n      {\n        headerName: \"Quality Rating\",\n        field: \"company_quality\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200\n      },\n      {\n        headerName: \"Industry Rank\",\n        field: \"industry_rank\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'lessThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 180\n      },\n      {\n        headerName: \"Fair Value Rating\",\n        field: \"fair_value_score\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200\n      },\n      {\n        headerName: \"Risk Rating\",\n        field: \"risk_score\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 140\n      },\n      {\n        headerName: \"Insider Rating\",\n        field: \"net_value_executed_pct\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200\n      },\n      {\n        headerName: \"Institutional Rating\",\n        field: \"net_holding_pct\",\n        filter: \"agNumberColumnFilter\",\n        filterParams: {\n          filterOptions: [\n            'greaterThan'\n          ],\n          suppressAndOrCondition: true,\n        },\n        width: 200\n      },\n    ]\n  }\n\n  fetchArticles = () => {\n    axios.get('https://theopenstreet.com/api/matrix/?action=search')\n      .then(res => {\n        // console.log(res.data);\n        let items = this.state;\n        items['rowData'] = items['rowData'].concat(res.data);\n        this.setState({ items });\n\n      });\n    let today = new Date();\n    today.setDate(today.getDate() - 20);\n    today = today.toISOString().slice(0, 10);\n    axios.get(`http://api.datanews.io/v1/news?size=50&source=wsj.com&q=finance&apiKey=08qu938b4y5v8dem2w521v76v&from=${today}&sortBy=date&language=en&country=US`)\n      .then(res => {\n        let sorted = res.data['hits']\n        this.setState({ docs: sorted });\n        console.log(this.state.docs); \n      \n      });\n    \n  }\n\n  componentDidMount() {\n    console.log(this.props.token)\n    this.fetchArticles();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      this.fetchArticles();\n    }\n  }\n\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages()\n    })\n  }\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val\n      })\n    }\n  }\n  filter = (params) => {\n    var model = this.gridApi.getFilterModel();\n    let items = this.state;\n    for (const field in model) {\n      items[`${field}`] = `${model[field].filter}`;\n    }\n    this.setState({ items });\n    console.log(this.state);\n  }\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n    // console.log(this.state)\n  }\n  handleSubmit = event => {\n    axios.post(`https://theopenstreet.com/api/portfolio/?token=${localStorage.getItem('token')}`, {\n        portfolio_name: this.state.name,\n        allocation: this.state.allocation,\n        date_created: this.state.basicPicker[0].toISOString().split('T')[0],\n        min_health: parseInt(this.state.company_health),\n        min_yield: parseInt(this.state.company_yield),\n        min_fair_value:parseInt(this.state.fair_value_score),\n        min_quality: parseInt(this.state.company_quality),\n        min_risk:parseInt(this.state.risk_score),\n        max_industry_rank: parseInt(this.state.industry_rank),\n        min_insider_rating:parseInt(this.state.net_value_executed_pct),\n        min_inst_rating: parseInt(this.state.net_holding_pct),\n      })\n      this.props.history.push('/portfolios/');\n  }\n  render() {\n    if (!this.props.token) {\n      return <Redirect to=\"/\" />;\n    }\n    const { rowData, columnDefs, defaultColDef, basicPicker } = this.state;\n    if (this.state.rowData.length === 0 & this.state.isLoading === false) {\n      let items = this.state;\n      items['isLoading'] = true;\n      this.setState({ items });\n    }\n    if (this.state.rowData.length !== 0 & this.state.isLoading === true) {\n      let items = this.state;\n      items['isLoading'] = false;\n      this.setState({ items });\n    }\n    if (this.state.docs.length === 0 & this.state.isPostLoading === false) {\n      this.setState({isPostLoading: true});\n    }\n    if (this.state.docs.length !== 0 & this.state.isPostLoading === true) {\n      this.setState({isPostLoading: false})\n    }\n    return (\n      <React.Fragment>\n        \n        <List\n          // itemLayout=\"horizontal\"\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 2,\n            lg: 3,\n            xl: 3,\n            xxl: 3,\n          }}\n          size=\"small\"\n          pagination={{\n            onChange: page => {\n              console.log(page);\n            },\n            pageSize: 3,\n          }}\n          dataSource={this.state.docs}\n\n          renderItem={item => (\n            <Card style={{marginLeft: 20, marginRight: 20}}>\n              <CardImg\n                className=\"img-fluid mb-2\"\n                src={item.imageUrl}\n                alt=\"card image cap\"\n              />\n                <Container>\n                  <Row>\n                    \n                    <Col>\n                      <a href={item.url}><h3>{item.title}</h3></a>\n                      <Row>\n                        <Col lg=\"5\" sm=\"5\" md=\"5\" style={{paddingTop: 5}}>\n                          <Icon.Clock size={15} style={{color: \"white\"}}/>\n                          <label>{new Date(item.pubDate).toString().substring(4, 15)}</label>\n                        </Col>\n                        <Col lg=\"5\" sm=\"5\" style={{paddingTop: 5}}>\n                          <Icon.User size={15} style={{color: \"white\"}}/>\n                          <label>{item.authors[0]}</label>\n                        </Col>\n                        <Col lg=\"5\" sm=\"5\" style={{paddingTop: 5}}>\n                          <Icon.Globe size={15} style={{color: \"white\"}}/>\n                          <label>{getCountryName(item.country.toUpperCase())}</label>\n                        </Col>\n                        <Col lg=\"5\" sm=\"5\">\n                          <img src={`https://www.google.com/s2/favicons?domain=${item.source}`} alt=\"No Image\"/>\n                          <label>{item.source.toUpperCase()}</label>\n                        </Col>\n                      </Row>\n                      <Divider />\n                      <p>{item.content.substring(0, 250)}...</p>\n                    </Col>\n                  </Row>\n                \n                </Container>\n            </Card>\n          )}\n        />\n        \n        <Card style={{marginTop: 15}}>\n\n          <CardHeader id=\"portgen\">\n            <CardTitle>\n              <h4 style={{paddingBottom: 15}}>Portfolio Generation</h4>\n            </CardTitle>\n\n          </CardHeader>\n\n          <CardBody>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup row>\n                <Col md=\"4\">\n                  <span>Portfolio Name</span>\n                </Col>\n                <Col md=\"6\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={this.handleChange}\n\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"4\">\n                  <span>Allocation</span>\n                </Col>\n                <Col md=\"6\">\n                  <Input\n                    //  ref=\"sdf\"\n                    type=\"text\"\n                    name=\"allocation\"\n                    id=\"allocation\"\n                    onChange={this.handleChange}\n\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"4\">\n                  <span>Effective Date</span>\n                </Col>\n                <Col md=\"6\">\n                  <Flatpickr\n                    className=\"form-control\"\n                    value={basicPicker}\n                    placeholder=\"yyyy-mm-dd\"\n                    onChange={date => {\n                      this.setState({ basicPicker: date });\n                    }}\n                    options={{maxDate: new Date().fp_incr(-1) }}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md={{ size: 8, offset: 4 }}>\n                  <Button.Ripple\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                  >\n                    Apply Rules\n                  </Button.Ripple>\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                  >\n                    Reset\n                  </Button.Ripple>\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n\n        </Card>\n        <Card className=\"overflow-hidden agGrid-card\">\n        <CardTitle>\n              <h4 style={{paddingTop: 20, paddingLeft: 20}}>Stock Ratings Matrix</h4>\n            </CardTitle>\n          \n            \n            \n            <CardBody className=\"py-0\">\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                            0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                        </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                        </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                        </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                        </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={e => this.updateSearchQuery(e.target.value)}\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                      </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {context => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={true}\n                        onFilterChanged={this.filter}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStatetoProps = state => {\n  console.log(state)\n  return {\n    token: state.auth.token\n  }\n}\n\n\nexport default connect(mapStatetoProps)(AggridTable);\n"],"sourceRoot":""}