{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","assets/img/pages/login.png","views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","required","onClick","onChange","size","icon","label","React","Component","module","exports","LoginJWT","state","username","password","remember","handleLogin","e","preventDefault","localStorage","onAuth","handleRemember","setState","target","Fragment","CardBody","Form","action","onSubmit","FormGroup","Input","placeholder","Label","Button","Ripple","outline","history","push","withRouter","connect","values","dispatch","actions","Login","activeTab","toggle","tab","Row","Col","sm","xl","lg","md","Card","src","loginImg","alt","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId"],"mappings":"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","file":"static/js/15.9f85bf17.chunk.js","sourcesContent":["import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          required={this.props.required}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","module.exports = __webpack_public_path__ + \"static/media/login.fd58a052.png\";","import React from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { User, Lock, Check } from \"react-feather\"\nimport * as actions from \"../../../../redux/actions/auth/loginActions\"\nimport { connect } from \"react-redux\"\nimport { history } from \"../../../../history\"\n\nclass LoginJWT extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    remember: false\n  }\n\n  componentDidMount(){\n    if(localStorage.remember){\n      this.setState({\n        username: localStorage.username,\n        password: localStorage.password,\n        remember: localStorage.remember\n      })\n    }\n  }\n  handleLogin = e => {\n    e.preventDefault()\n    if(this.state.remember){\n      localStorage.username = this.state.username;\n      localStorage.password = this.state.password;\n      localStorage.remember = this.state.remember;\n    }\n    this.props.onAuth(this.state.username, this.state.password);\n    // console.log(this.props.values);\n  }\n\n  handleRemember = e => {\n    // console.log(e.target.checked)\n    this.setState({remember: e.target.checked})\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <CardBody className=\"pt-1\">\n          <Form action=\"/\" onSubmit={this.handleLogin}>\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\n              <Input\n                type=\"username\"\n                placeholder=\"Username\"\n                value={this.state.username}\n                onChange={e => this.setState({ username: e.target.value })}\n                required\n              />\n              <div className=\"form-control-position\">\n                <User size={15} />\n              </div>\n              <Label>Username</Label>\n            </FormGroup>\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={e => this.setState({ password: e.target.value })}\n                required\n              />\n              <div className=\"form-control-position\">\n                <Lock size={15} />\n              </div>\n              <Label>Password</Label>\n            </FormGroup>\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\n              <Checkbox\n                color=\"primary\"\n                icon={<Check className=\"vx-icon\" size={16} />}\n                label=\"Remember me\"\n                defaultChecked={this.state.remember}\n                onChange={this.handleRemember}\n              />\n              <div className=\"float-right\">\n                {/* <Link to=\"/pages/forgot-password\">Forgot Password?</Link> */}\n              </div>\n            </FormGroup>\n            <div className=\"d-flex justify-content-between\">\n              <Button.Ripple\n                color=\"primary\"\n                outline\n                onClick={() => {\n                  history.push(\"/register\")\n                }}\n              >\n                Register\n              </Button.Ripple>\n              <Button.Ripple color=\"primary\" type=\"submit\">\n                Login\n              </Button.Ripple>\n            </div>\n          </Form>\n        </CardBody>\n      </React.Fragment>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    values: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginJWT))\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport loginImg from \"../../../../assets/img/pages/login.png\"\nimport \"../../../../assets/scss/pages/authentication.scss\"\nimport LoginJWT from \"./LoginJWT\"\n\nclass Login extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n  toggle = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      })\n    }\n  }\n  render() {\n    return (\n      <Row className=\"m-0 justify-content-center\">\n        <Col\n          sm=\"8\"\n          xl=\"7\"\n          lg=\"10\"\n          md=\"8\"\n          className=\"d-flex justify-content-center\"\n        >\n          <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\n            <Row className=\"m-0\">\n              <Col\n                lg=\"6\"\n                className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\n              >\n                <img src={loginImg} alt=\"loginImg\" />\n              </Col>\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\n                <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\n                  <CardHeader className=\"pb-1\">\n                    <CardTitle>\n                      <h4 className=\"mb-0\">Login</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <p className=\"px-2 auth-title\">\n                    Welcome back, please login to your account.\n                  </p>\n                  <Nav tabs className=\"px-2\">\n                    <NavItem>\n                      <NavLink\n                        className={classnames({\n                          active: this.state.activeTab === \"1\"\n                        })}\n                        onClick={() => {\n                          this.toggle(\"1\")\n                        }}\n                      >\n                        Dashboard\n                      </NavLink>\n                    </NavItem>\n                  </Nav>\n                  <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                      <LoginJWT />\n                    </TabPane>\n                  </TabContent>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default Login\n"],"sourceRoot":""}